LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY countdown IS
PORT ( SW : IN STD_LOGIC_VECTOR(1 DOWNTO 0);  --switches
         reset: IN STD_LOGIC;  -- active low
         clk: IN STD_LOGIC;
         order: IN STD_LOGIC; --0 is countup, 1 is countdown
        HEX0:  OUT STD_LOGIC_VECTOR(0 to 6)  --7seg
        );
END countdown;

ARCHITECTURE beh of countdown is
type state_t is (ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE);
signal state : state_t;
BEGIN -- beh
process (clk, reset)
    begin --process
    if reset = '0' then
        state <= ZERO;
       
    elsif clk'event and clk = '1' then -- rising clock edge
        if order = '0' then
            case state is
            when ZERO =>
            HEX0 <= "0000001";
            state <= ONE;
           
            when ONE =>
            HEX0 <= "1001111";
            state <= TWO;
           
            when TWO =>
            HEX0 <= "0010010";
            state <= THREE;
           
            when THREE =>
            HEX0 <= "0000110";
            state <= FOUR;
           
            when FOUR =>
            HEX0 <= "1001101";
            state <= FIVE;
           
            when FIVE =>
            HEX0 <= "0100100";
            state <= SIX;
           
            when SIX =>
            HEX0 <= "0100000";
            state <= SEVEN;
           
            when SEVEN =>
            HEX0 <= "0001111";
            state <= EIGHT;
           
            when EIGHT =>
            HEX0 <= "0000000";
            state <= NINE;
           
            when NINE =>
            HEX0 <= "0000100";
            state <= ZERO;
        end case;
           
        else
            case state is
            when NINE =>
                HEX0 <= "0000100";
                state <= EIGHT;
               
            when EIGHT =>
                HEX0 <= "0000000";
                state <= SEVEN;
               
            when SEVEN =>
                HEX0 <= "0001111";
                state <= SIX;
               
            when SIX =>
                HEX0 <= "0100000";
                state <= FIVE;
               
            when FIVE =>
                HEX0 <= "0100100";
                state <= FOUR;
               
            when FOUR =>
                HEX0 <= "1001101";
                state <= THREE;
               
            when THREE =>
                HEX0 <= "0000110";
                state <= TWO;
           
            when TWO =>
                HEX0 <= "0010010";
                state <= ONE;
               
            when ONE =>
                HEX0 <= "1001111";
                state <= ZERO;
               
            when ZERO =>
                HEX0 <= "0000001";
                state <= NINE;
            end case;
        end if;
    end if;
       
    end process;
end beh;


-- 0 is 0000001
-- 1 is 1001111
-- 2 is 0010010
-- 3 is 0000110
-- 4 is 1001101
-- 5 is 0100100
-- 6 is 0100000
-- 7 is 0001111
-- 8 is 0000000
-- 9 is 0000100
